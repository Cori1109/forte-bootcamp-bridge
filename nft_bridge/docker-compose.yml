version: "3"

x-common-variables: &common-variables
  POSTGRES_DB: bridge_db
  POSTGRES_TEST_DB: bridge_test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_PORT: 5432
  POSTGRES_HOST: db
  REDIS_HOST: redis

services:
  db:
    container_name: nftbridge_db
    image: postgres:14
    ports:
      - 5432:5432
    volumes:
      - postgres-storage:/var/lib/postgresql/data
    environment: *common-variables
    restart: unless-stopped

  # ----------------------------------------------------------------------------
  # Setup the local postgres database.
  #
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - "pg_data:/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      close:
        aliases:
          - postgres

  # ----------------------------------------------------------------------------
  # Setup the local redis server.
  #
  redis:
    container_name: nftbridge_cache
    depends_on:
      - db
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      close:
        aliases:
          - redis
    restart: unless-stopped
    command: redis-server

  # ----------------------------------------------------------------------------
  # Setup the local application instance. Please relapce project-name bellow
  # with the name of your actual project in the image string.
  #
  app:
    container_name: nftbridge_app
    build:
      context: .
    depends_on:
      - db
      - redis
    image: bootcamp-bridge/project-name:latest
    ports:
      - "4000:4000"
    volumes:
      - ".:/app"
    environment:
      <<: *common-variables
      MIX_ENV: dev
    stdin_open: true
    command: ["bash", "tmp/server_init.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:4000/ || exit 1"]
      interval: 5s
      timeout: 3s
      start_period: 5s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

networks:
  open:
    driver: bridge
  close:
    driver: bridge

volumes:
  redis_data:
  pg_data:
  app_data:
